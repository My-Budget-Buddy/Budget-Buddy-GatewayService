# Standard port for Gateway Service:
server:
  port: 8125

# Configure the location of the Eureka Client. This is the location all services
# will go to to register themselves with the Discovery Service. Will be set as
# an environment variable once deployed, but will default to localhost if no
# value is set:
eureka:
  instance:
    hostname: ${AWS_HOSTNAME:localhost}
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka}

# Configure CORS for entire project:
spring:
  application:
    name: gateway
  output:
    ansi:
      enabled: ALWAYS
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          # All routes:
          "[/**]":
            # Typical React port. Could also put your load balancer url here instead:
            allowedOrigins: ${FRONTEND_URL:http://localhost:5173}, http://localhost:5173, http://[::1]:5173/, https://frontend.skillstorm-congo.com
            allowedHeaders: "*"
            exposedHeaders: "*"
            allowCredentials: true
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE

      # From the example we did in class. Will replace later but leaving this here so we can
      # use it as a guide once we start adding actual services:
      routes:
        # The key we defined for the UserService in its application.yml:
        - id: user-service
          # When we register with Eureka, we are defining a route from the Ribbon load balancer that
          # comes packaged with the Eureka server to distribute requests across our user-service instances:
          uri: lb://user-service
          predicates:
            - Path=/users/**
          # Configure the CircuitBreaker class from resilience4j:
          filters:
            # Checks the JWT for every request sent to this service
            - name: AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: fallbackController
                fallbackUri: forward:/cache/users
            # Configure exponential backoff:
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY
                methods: GET
                backoff:
                  firstBackoff: 10ms
                  maxBackoff: 50ms
                  factor: 2
                  basedOnPreviousValue: false

        # Tax Service:
        - id: tax-service
          uri: lb://tax-service
          predicates:
            - Path=/taxes/**
          # Tax Service Filter and CircuitBreaker:
          filters:
            - name: AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: fallbackController
                fallbackUri: forward:/cache/taxes
            # Tax Service backoff:
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY
                methods: GET
                backoff:
                  firstBackoff: 10ms
                  maxBackoff: 50ms
                  factor: 2
                  basedOnPreviousValue: false

        # Auth Service
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/auth/**
          # Auth Service Filter and CircuitBreaker
          filters:
            - name: AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: fallbackController
                fallbackUri: forward:/cache/auth
            # Auth Service backoff:
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY
                methods: GET
                backoff:
                  firstBackoff: 10ms
                  maxBackoff: 50ms
                  factor: 2
                  basedOnPreviousValue: false

        # Transaction Service
        - id: transaction-service
          uri: lb://transaction-service
          predicates:
            - Path=/transactions/**
          # Transaction Service Filter and CircuitBreaker
          filters:
            - name: AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: fallbackController
                fallbackUri: forward:/cache/transactions
            # Transaction Service backoff:
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY
                methods: GET
                backoff:
                  firstBackoff: 10ms
                  maxBackoff: 50ms
                  factor: 2
                  basedOnPreviousValue: false

        # Account Service:
        - id: account-service
          uri: lb://account-service
          predicates:
            - Path=/accounts/**
          # Account Service CircuitBreaker and Filter
          filters:
            - name: AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: fallbackController
                fallbackUri: forward:/cache/accounts
            # Account Service backoff:
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY
                methods: GET
                backoff:
                  firstBackoff: 10ms
                  maxBackoff: 50ms
                  factor: 2
                  basedOnPreviousValue: false

        # Budget Service:
        - id: budget-service
          uri: lb://budget-service
          predicates:
            - Path=/budgets/**, /buckets/**, /summarys/**
          # Budget Service Filter and CircuitBreaker
          filters:
            - name: AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: fallbackController
                fallbackUri: forward:/cache/budgets
            # Budget Service backoff:
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY
                methods: GET
                backoff:
                  firstBackoff: 10ms
                  maxBackoff: 50ms
                  factor: 2
                  basedOnPreviousValue: false
        
        - id: tax-demo
          uri: lb://tax-demo
          predicates:
            - Path=/api/credit/**
          filters:
            - name: AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: fallbackController
                fallbackUri: forward:/cache/credit
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY
                methods: GET
                backoff:
                  firstBackoff: 10ms
                  maxBackoff: 50ms
                  factor: 2
                  basedOnPreviousValue: false

# Configure logging levels:
logging:
  level:
    org:
      springframework: INFO
    io:
      netty: ERROR
    reactor:
      netty: ERROR
